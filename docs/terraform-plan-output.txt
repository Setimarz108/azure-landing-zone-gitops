
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_resource_group.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_resource_group" "main" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "germanywestcentral"
      [32m+[0m[0m name     = "azlz-dev-rg-001"
      [32m+[0m[0m tags     = (known after apply)
    }

[1m  # module.monitoring.azurerm_application_insights.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_application_insights" "main" {
      [32m+[0m[0m app_id                                = (known after apply)
      [32m+[0m[0m application_type                      = "web"
      [32m+[0m[0m connection_string                     = (sensitive value)
      [32m+[0m[0m daily_data_cap_in_gb                  = (known after apply)
      [32m+[0m[0m daily_data_cap_notifications_disabled = (known after apply)
      [32m+[0m[0m disable_ip_masking                    = false
      [32m+[0m[0m force_customer_storage_for_profiler   = false
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m instrumentation_key                   = (sensitive value)
      [32m+[0m[0m internet_ingestion_enabled            = true
      [32m+[0m[0m internet_query_enabled                = true
      [32m+[0m[0m local_authentication_disabled         = false
      [32m+[0m[0m location                              = "germanywestcentral"
      [32m+[0m[0m name                                  = "azlz-dev-appi-001"
      [32m+[0m[0m resource_group_name                   = "azlz-dev-rg-001"
      [32m+[0m[0m retention_in_days                     = 90
      [32m+[0m[0m sampling_percentage                   = 100
      [32m+[0m[0m tags                                  = (known after apply)
      [32m+[0m[0m workspace_id                          = (known after apply)
    }

[1m  # module.monitoring.azurerm_log_analytics_workspace.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_log_analytics_workspace" "main" {
      [32m+[0m[0m allow_resource_only_permissions = true
      [32m+[0m[0m daily_quota_gb                  = -1
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m internet_ingestion_enabled      = true
      [32m+[0m[0m internet_query_enabled          = true
      [32m+[0m[0m local_authentication_disabled   = false
      [32m+[0m[0m location                        = "germanywestcentral"
      [32m+[0m[0m name                            = "azlz-dev-law-001"
      [32m+[0m[0m primary_shared_key              = (sensitive value)
      [32m+[0m[0m resource_group_name             = "azlz-dev-rg-001"
      [32m+[0m[0m retention_in_days               = 90
      [32m+[0m[0m secondary_shared_key            = (sensitive value)
      [32m+[0m[0m sku                             = "PerGB2018"
      [32m+[0m[0m tags                            = (known after apply)
      [32m+[0m[0m workspace_id                    = (known after apply)
    }

[1m  # module.monitoring.azurerm_monitor_action_group.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_monitor_action_group" "main" {
      [32m+[0m[0m enabled             = true
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "global"
      [32m+[0m[0m name                = "azlz-dev-ag-001"
      [32m+[0m[0m resource_group_name = "azlz-dev-rg-001"
      [32m+[0m[0m short_name          = "AlertGroup"
      [32m+[0m[0m tags                = (known after apply)

      [32m+[0m[0m email_receiver {
          [32m+[0m[0m email_address = "sebastian.marquez.dev@gmail.com"
          [32m+[0m[0m name          = "admin-email"
        }
    }

[1m  # module.monitoring.azurerm_monitor_activity_log_alert.resource_deletion[0m will be created
[0m  [32m+[0m[0m resource "azurerm_monitor_activity_log_alert" "resource_deletion" {
      [32m+[0m[0m description         = "Alert when resources are deleted"
      [32m+[0m[0m enabled             = true
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "global"
      [32m+[0m[0m name                = "azlz-dev-alert-deletion-001"
      [32m+[0m[0m resource_group_name = "azlz-dev-rg-001"
      [32m+[0m[0m scopes              = (known after apply)
      [32m+[0m[0m tags                = (known after apply)

      [32m+[0m[0m action {
          [32m+[0m[0m action_group_id = (known after apply)
        }

      [32m+[0m[0m criteria {
          [32m+[0m[0m category       = "Administrative"
          [32m+[0m[0m operation_name = "Microsoft.Resources/subscriptions/resourceGroups/delete"
          [32m+[0m[0m resource_id    = (known after apply)

          [32m+[0m[0m resource_health (known after apply)

          [32m+[0m[0m service_health (known after apply)
        }
    }

[1m  # module.monitoring.azurerm_monitor_diagnostic_setting.nsg_diagnostics[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_monitor_diagnostic_setting" "nsg_diagnostics" {
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m log_analytics_destination_type = (known after apply)
      [32m+[0m[0m log_analytics_workspace_id     = (known after apply)
      [32m+[0m[0m name                           = "azlz-dev-diag-nsg-1"
      [32m+[0m[0m storage_account_id             = (known after apply)
      [32m+[0m[0m target_resource_id             = (known after apply)

      [32m+[0m[0m enabled_log {
          [32m+[0m[0m category       = "NetworkSecurityGroupEvent"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m enabled_log {
          [32m+[0m[0m category       = "NetworkSecurityGroupRuleCounter"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m log (known after apply)

      [32m+[0m[0m metric {
          [32m+[0m[0m category = "AllMetrics"
          [32m+[0m[0m enabled  = true
        }
    }

[1m  # module.monitoring.azurerm_monitor_diagnostic_setting.nsg_diagnostics[1][0m will be created
[0m  [32m+[0m[0m resource "azurerm_monitor_diagnostic_setting" "nsg_diagnostics" {
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m log_analytics_destination_type = (known after apply)
      [32m+[0m[0m log_analytics_workspace_id     = (known after apply)
      [32m+[0m[0m name                           = "azlz-dev-diag-nsg-2"
      [32m+[0m[0m storage_account_id             = (known after apply)
      [32m+[0m[0m target_resource_id             = (known after apply)

      [32m+[0m[0m enabled_log {
          [32m+[0m[0m category       = "NetworkSecurityGroupEvent"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m enabled_log {
          [32m+[0m[0m category       = "NetworkSecurityGroupRuleCounter"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m log (known after apply)

      [32m+[0m[0m metric {
          [32m+[0m[0m category = "AllMetrics"
          [32m+[0m[0m enabled  = true
        }
    }

[1m  # module.monitoring.azurerm_monitor_diagnostic_setting.nsg_diagnostics[2][0m will be created
[0m  [32m+[0m[0m resource "azurerm_monitor_diagnostic_setting" "nsg_diagnostics" {
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m log_analytics_destination_type = (known after apply)
      [32m+[0m[0m log_analytics_workspace_id     = (known after apply)
      [32m+[0m[0m name                           = "azlz-dev-diag-nsg-3"
      [32m+[0m[0m storage_account_id             = (known after apply)
      [32m+[0m[0m target_resource_id             = (known after apply)

      [32m+[0m[0m enabled_log {
          [32m+[0m[0m category       = "NetworkSecurityGroupEvent"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m enabled_log {
          [32m+[0m[0m category       = "NetworkSecurityGroupRuleCounter"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m log (known after apply)

      [32m+[0m[0m metric {
          [32m+[0m[0m category = "AllMetrics"
          [32m+[0m[0m enabled  = true
        }
    }

[1m  # module.monitoring.azurerm_storage_account.diagnostics[0m will be created
[0m  [32m+[0m[0m resource "azurerm_storage_account" "diagnostics" {
      [32m+[0m[0m access_tier                        = (known after apply)
      [32m+[0m[0m account_kind                       = "StorageV2"
      [32m+[0m[0m account_replication_type           = "LRS"
      [32m+[0m[0m account_tier                       = "Standard"
      [32m+[0m[0m allow_nested_items_to_be_public    = false
      [32m+[0m[0m cross_tenant_replication_enabled   = true
      [32m+[0m[0m default_to_oauth_authentication    = false
      [32m+[0m[0m dns_endpoint_type                  = "Standard"
      [32m+[0m[0m enable_https_traffic_only          = (known after apply)
      [32m+[0m[0m https_traffic_only_enabled         = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m infrastructure_encryption_enabled  = false
      [32m+[0m[0m is_hns_enabled                     = false
      [32m+[0m[0m large_file_share_enabled           = (known after apply)
      [32m+[0m[0m local_user_enabled                 = true
      [32m+[0m[0m location                           = "germanywestcentral"
      [32m+[0m[0m min_tls_version                    = "TLS1_2"
      [32m+[0m[0m name                               = "azlzdevdiagst001"
      [32m+[0m[0m nfsv3_enabled                      = false
      [32m+[0m[0m primary_access_key                 = (sensitive value)
      [32m+[0m[0m primary_blob_connection_string     = (sensitive value)
      [32m+[0m[0m primary_blob_endpoint              = (known after apply)
      [32m+[0m[0m primary_blob_host                  = (known after apply)
      [32m+[0m[0m primary_blob_internet_endpoint     = (known after apply)
      [32m+[0m[0m primary_blob_internet_host         = (known after apply)
      [32m+[0m[0m primary_blob_microsoft_endpoint    = (known after apply)
      [32m+[0m[0m primary_blob_microsoft_host        = (known after apply)
      [32m+[0m[0m primary_connection_string          = (sensitive value)
      [32m+[0m[0m primary_dfs_endpoint               = (known after apply)
      [32m+[0m[0m primary_dfs_host                   = (known after apply)
      [32m+[0m[0m primary_dfs_internet_endpoint      = (known after apply)
      [32m+[0m[0m primary_dfs_internet_host          = (known after apply)
      [32m+[0m[0m primary_dfs_microsoft_endpoint     = (known after apply)
      [32m+[0m[0m primary_dfs_microsoft_host         = (known after apply)
      [32m+[0m[0m primary_file_endpoint              = (known after apply)
      [32m+[0m[0m primary_file_host                  = (known after apply)
      [32m+[0m[0m primary_file_internet_endpoint     = (known after apply)
      [32m+[0m[0m primary_file_internet_host         = (known after apply)
      [32m+[0m[0m primary_file_microsoft_endpoint    = (known after apply)
      [32m+[0m[0m primary_file_microsoft_host        = (known after apply)
      [32m+[0m[0m primary_location                   = (known after apply)
      [32m+[0m[0m primary_queue_endpoint             = (known after apply)
      [32m+[0m[0m primary_queue_host                 = (known after apply)
      [32m+[0m[0m primary_queue_microsoft_endpoint   = (known after apply)
      [32m+[0m[0m primary_queue_microsoft_host       = (known after apply)
      [32m+[0m[0m primary_table_endpoint             = (known after apply)
      [32m+[0m[0m primary_table_host                 = (known after apply)
      [32m+[0m[0m primary_table_microsoft_endpoint   = (known after apply)
      [32m+[0m[0m primary_table_microsoft_host       = (known after apply)
      [32m+[0m[0m primary_web_endpoint               = (known after apply)
      [32m+[0m[0m primary_web_host                   = (known after apply)
      [32m+[0m[0m primary_web_internet_endpoint      = (known after apply)
      [32m+[0m[0m primary_web_internet_host          = (known after apply)
      [32m+[0m[0m primary_web_microsoft_endpoint     = (known after apply)
      [32m+[0m[0m primary_web_microsoft_host         = (known after apply)
      [32m+[0m[0m public_network_access_enabled      = true
      [32m+[0m[0m queue_encryption_key_type          = "Service"
      [32m+[0m[0m resource_group_name                = "azlz-dev-rg-001"
      [32m+[0m[0m secondary_access_key               = (sensitive value)
      [32m+[0m[0m secondary_blob_connection_string   = (sensitive value)
      [32m+[0m[0m secondary_blob_endpoint            = (known after apply)
      [32m+[0m[0m secondary_blob_host                = (known after apply)
      [32m+[0m[0m secondary_blob_internet_endpoint   = (known after apply)
      [32m+[0m[0m secondary_blob_internet_host       = (known after apply)
      [32m+[0m[0m secondary_blob_microsoft_endpoint  = (known after apply)
      [32m+[0m[0m secondary_blob_microsoft_host      = (known after apply)
      [32m+[0m[0m secondary_connection_string        = (sensitive value)
      [32m+[0m[0m secondary_dfs_endpoint             = (known after apply)
      [32m+[0m[0m secondary_dfs_host                 = (known after apply)
      [32m+[0m[0m secondary_dfs_internet_endpoint    = (known after apply)
      [32m+[0m[0m secondary_dfs_internet_host        = (known after apply)
      [32m+[0m[0m secondary_dfs_microsoft_endpoint   = (known after apply)
      [32m+[0m[0m secondary_dfs_microsoft_host       = (known after apply)
      [32m+[0m[0m secondary_file_endpoint            = (known after apply)
      [32m+[0m[0m secondary_file_host                = (known after apply)
      [32m+[0m[0m secondary_file_internet_endpoint   = (known after apply)
      [32m+[0m[0m secondary_file_internet_host       = (known after apply)
      [32m+[0m[0m secondary_file_microsoft_endpoint  = (known after apply)
      [32m+[0m[0m secondary_file_microsoft_host      = (known after apply)
      [32m+[0m[0m secondary_location                 = (known after apply)
      [32m+[0m[0m secondary_queue_endpoint           = (known after apply)
      [32m+[0m[0m secondary_queue_host               = (known after apply)
      [32m+[0m[0m secondary_queue_microsoft_endpoint = (known after apply)
      [32m+[0m[0m secondary_queue_microsoft_host     = (known after apply)
      [32m+[0m[0m secondary_table_endpoint           = (known after apply)
      [32m+[0m[0m secondary_table_host               = (known after apply)
      [32m+[0m[0m secondary_table_microsoft_endpoint = (known after apply)
      [32m+[0m[0m secondary_table_microsoft_host     = (known after apply)
      [32m+[0m[0m secondary_web_endpoint             = (known after apply)
      [32m+[0m[0m secondary_web_host                 = (known after apply)
      [32m+[0m[0m secondary_web_internet_endpoint    = (known after apply)
      [32m+[0m[0m secondary_web_internet_host        = (known after apply)
      [32m+[0m[0m secondary_web_microsoft_endpoint   = (known after apply)
      [32m+[0m[0m secondary_web_microsoft_host       = (known after apply)
      [32m+[0m[0m sftp_enabled                       = false
      [32m+[0m[0m shared_access_key_enabled          = true
      [32m+[0m[0m table_encryption_key_type          = "Service"
      [32m+[0m[0m tags                               = (known after apply)

      [32m+[0m[0m blob_properties {
          [32m+[0m[0m change_feed_enabled      = false
          [32m+[0m[0m default_service_version  = (known after apply)
          [32m+[0m[0m last_access_time_enabled = false
          [32m+[0m[0m versioning_enabled       = false

          [32m+[0m[0m container_delete_retention_policy {
              [32m+[0m[0m days = 90
            }

          [32m+[0m[0m delete_retention_policy {
              [32m+[0m[0m days                     = 90
              [32m+[0m[0m permanent_delete_enabled = false
            }
        }

      [32m+[0m[0m network_rules (known after apply)

      [32m+[0m[0m queue_properties (known after apply)

      [32m+[0m[0m routing (known after apply)

      [32m+[0m[0m share_properties (known after apply)

      [32m+[0m[0m static_website (known after apply)
    }

[1m  # module.networking.azurerm_network_security_group.application[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "application" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "germanywestcentral"
      [32m+[0m[0m name                = "azlz-dev-nsg-app-001"
      [32m+[0m[0m resource_group_name = "azlz-dev-rg-001"
      [32m+[0m[0m security_rule       = [
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "443"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "AllowHTTPSInbound"
              [32m+[0m[0m priority                                   = 1001
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "80"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "AllowHTTPInbound"
              [32m+[0m[0m priority                                   = 1000
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags                = (known after apply)
    }

[1m  # module.networking.azurerm_network_security_group.database[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "database" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "germanywestcentral"
      [32m+[0m[0m name                = "azlz-dev-nsg-db-001"
      [32m+[0m[0m resource_group_name = "azlz-dev-rg-001"
      [32m+[0m[0m security_rule       = [
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "1433"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "AllowSQLFromAppSubnet"
              [32m+[0m[0m priority                                   = 1000
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefixes                    = [
                  [32m+[0m[0m "10.0.2.0/24",
                ]
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (2 unchanged attributes hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Deny"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "*"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "DenyAllInbound"
              [32m+[0m[0m priority                                   = 4000
              [32m+[0m[0m protocol                                   = "*"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags                = (known after apply)
    }

[1m  # module.networking.azurerm_network_security_group.management[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "management" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "germanywestcentral"
      [32m+[0m[0m name                = "azlz-dev-nsg-mgmt-001"
      [32m+[0m[0m resource_group_name = "azlz-dev-rg-001"
      [32m+[0m[0m security_rule       = [
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "22"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "AllowSSHInbound"
              [32m+[0m[0m priority                                   = 1001
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "0.0.0.0/0"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "3389"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "AllowRDPInbound"
              [32m+[0m[0m priority                                   = 1000
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "0.0.0.0/0"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags                = (known after apply)
    }

[1m  # module.networking.azurerm_subnet.application[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "application" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.2.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "azlz-dev-snet-app-001"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "azlz-dev-rg-001"
      [32m+[0m[0m virtual_network_name                           = "azlz-dev-vnet-001"
    }

[1m  # module.networking.azurerm_subnet.database[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "database" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.3.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "azlz-dev-snet-db-001"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "azlz-dev-rg-001"
      [32m+[0m[0m virtual_network_name                           = "azlz-dev-vnet-001"

      [32m+[0m[0m delegation {
          [32m+[0m[0m name = "database-delegation"

          [32m+[0m[0m service_delegation {
              [32m+[0m[0m actions = [
                  [32m+[0m[0m "Microsoft.Network/virtualNetworks/subnets/join/action",
                  [32m+[0m[0m "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action",
                  [32m+[0m[0m "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action",
                ]
              [32m+[0m[0m name    = "Microsoft.Sql/managedInstances"
            }
        }
    }

[1m  # module.networking.azurerm_subnet.management[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "management" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "azlz-dev-snet-mgmt-001"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "azlz-dev-rg-001"
      [32m+[0m[0m virtual_network_name                           = "azlz-dev-vnet-001"
    }

[1m  # module.networking.azurerm_subnet_network_security_group_association.application[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "application" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # module.networking.azurerm_subnet_network_security_group_association.database[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "database" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # module.networking.azurerm_subnet_network_security_group_association.management[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "management" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # module.networking.azurerm_virtual_network.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "main" {
      [32m+[0m[0m address_space       = [
          [32m+[0m[0m "10.1.0.0/16",
        ]
      [32m+[0m[0m dns_servers         = (known after apply)
      [32m+[0m[0m guid                = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "germanywestcentral"
      [32m+[0m[0m name                = "azlz-dev-vnet-001"
      [32m+[0m[0m resource_group_name = "azlz-dev-rg-001"
      [32m+[0m[0m subnet              = (known after apply)
      [32m+[0m[0m tags                = (known after apply)
    }

[1mPlan:[0m 19 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m resource_group_location = "germanywestcentral"
  [32m+[0m[0m resource_group_name     = "azlz-dev-rg-001"
  [32m+[0m[0m subnet_ids              = {
      [32m+[0m[0m application = (known after apply)
      [32m+[0m[0m database    = (known after apply)
      [32m+[0m[0m management  = (known after apply)
    }
  [32m+[0m[0m virtual_network_id      = (known after apply)
  [32m+[0m[0m virtual_network_name    = "azlz-dev-vnet-001"
